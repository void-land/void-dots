#!/bin/bash

# Exit immediately if a command exits with a non-zero status
set -e

ASTAL_REPO="https://github.com/aylur/astal.git"
REPO_DIR="/tmp/astal"

info() {
    echo -e "\033[1;32m[INFO]\033[0m $1"
}

setup_deps() {
    info "Installing required dependencies..."

    sudo xbps-install -y meson fftw-devel fftw pam pam-devel pipewire-devel pipewire wireplumber wireplumber-devel ncurses-devel iniparser-devel libnma-devel vala valadoc gtk+3-devel gtk-layer-shell-devel gobject-introspection libgirepository-devel
}

clone_repo() {
    info "Cloning the Astal repository..."

    if [ -d "$REPO_DIR" ]; then
        info "Existing Astal directory found. Removing it..."
        rm -rf "$REPO_DIR"
    fi

    git clone "$ASTAL_REPO" "$REPO_DIR" --depth 1
}

build_and_install() {
    local lib_path=$1
    info "Building and installing $(basename "$lib_path")..."

    if [ -d "$REPO_DIR/$lib_path" ]; then
        cd "$REPO_DIR/$lib_path"
        meson setup --prefix /usr build
        sudo meson install -C build
    fi

}

clean_up() {
    info "Cleaning up..."
    rm -rf "$REPO_DIR"
}

setup_deps
clone_repo

build_and_install "lib/astal/io"
build_and_install "lib/astal/gtk3"
build_and_install "lang/gjs"

build_and_install "lib/mpris"
build_and_install "lib/hyprland"
build_and_install "lib/network"
build_and_install "lib/powerprofiles"
build_and_install "lib/wireplumber"
build_and_install "lib/auth"
build_and_install "lib/bluetooth"
build_and_install "lib/cava"
build_and_install "lib/battery"
build_and_install "lib/apps"
build_and_install "lib/river"
build_and_install "lib/notifd"
build_and_install "lib/greet"
build_and_install "lib/tray"

clean_up

info "Astal installation completed successfully."
