#!/bin/bash

# Exit immediately if a command exits with a non-zero status
set -e

REPO_DIR="/tmp/astal"
ASTAL_REPO="https://github.com/aylur/astal.git"

LIBRARIES=(
    "lib/astal/io"
    "lib/astal/gtk3"
    "lang/gjs"
    "lib/mpris"
    "lib/hyprland"
    "lib/network"
    "lib/powerprofiles"
    "lib/wireplumber"
    "lib/auth"
    "lib/bluetooth"
    "lib/cava"
    "lib/battery"
    "lib/apps"
    "lib/river"
    "lib/notifd"
    "lib/greet"
    "lib/tray"
)

info() {
    echo -e "\033[1;32m[INFO]\033[0m $1"
}

usage() {
    echo "Usage: $0 [OPTIONS]"
    echo ""
    echo "Options:"
    echo "  -l, --lib <library>        Install a specific library (e.g., 'lib/astal/io')"
    echo "  -a, --all                  Install all libraries"
    echo "  -f, --flags <flags>        Custom flags for meson (e.g., '--buildtype=release')"
    echo "  -h, --help                 Display this help message"
    echo "  -w, --wipe                 Wipe repo from $REPO_DIR"
    echo ""
    echo "Available Libraries:"
    for lib in "${LIBRARIES[@]}"; do
        echo "  - $lib"
    done
    echo ""
    echo "Examples:"
    echo "  $0 --lib lib/astal/io"
    echo "  $0 --all"
    echo "  $0 --lib lib/astal/io --flags '--buildtype=debug'"
    exit 0
}

setup_deps() {
    info "Installing required dependencies..."
    sudo xbps-install -y meson fftw-devel fftw pam pam-devel pipewire-devel pipewire wireplumber wireplumber-devel ncurses-devel iniparser-devel libnma-devel vala valadoc gtk+3-devel gtk-layer-shell-devel gobject-introspection libgirepository-devel
}

clone_repo() {
    if [ -d "$REPO_DIR" ]; then
        if [ -d "$REPO_DIR/.git" ]; then
            info "Existing Astal repository found. Getting updates..."
            cd "$REPO_DIR"
            git pull --ff-only
        else
            info "Directory exists but is not a valid git repository. Removing it..."
            rm -rf "$REPO_DIR"
            info "Cloning the Astal repository..."
            git clone "$ASTAL_REPO" "$REPO_DIR" --depth 1
        fi
    else
        info "Cloning the Astal repository..."
        git clone "$ASTAL_REPO" "$REPO_DIR" --depth 1
    fi
}

wipe_repo() {
    if [ -d "$REPO_DIR" ]; then
        rm -rf "$REPO_DIR"
    fi
}

build_and_install() {
    local lib_path=$1
    local meson_flags=$2
    info "Building and installing $(basename "$lib_path")..."

    if [ -d "$REPO_DIR/$lib_path" ]; then
        cd "$REPO_DIR/$lib_path"
        meson setup --prefix /usr $meson_flags build
        sudo meson install -C build
    else
        echo -e "\033[1;31m[ERROR]\033[0m Library path $lib_path not found!"
    fi
}

# clean_up() {
#     info "Cleaning up..."
#     rm -rf "$REPO_DIR"
# }

install_all() {
    local meson_flags=$1

    for lib in "${LIBRARIES[@]}"; do
        build_and_install "$lib" "$meson_flags"
    done
}

LIB_TO_INSTALL=""
INSTALL_ALL_LIBS=false
MESON_FLAGS=""

while [[ $# -gt 0 ]]; do
    case $1 in
        -l|--lib)
            LIB_TO_INSTALL="$2"
            shift 2
            ;;
        -a|--all)
            INSTALL_ALL_LIBS=true
            shift
            ;;
        -f|--flags)
            MESON_FLAGS="$2"
            shift 2
            ;;
        -h|--help)
            usage
            ;;
        -w|--wipe)
            wipe_repo
            ;;
        *)
            echo -e "\033[1;31m[ERROR]\033[0m Unknown option: $1"
            usage
            ;;
    esac
done

if [ "$INSTALL_ALL_LIBS" = true ] || [ -n "$LIB_TO_INSTALL" ]; then
    setup_deps
    clone_repo

    if [ "$INSTALL_ALL_LIBS" = true ]; then
        install_all "$MESON_FLAGS"
    elif [ -n "$LIB_TO_INSTALL" ]; then
        build_and_install "$LIB_TO_INSTALL" "$MESON_FLAGS"
    fi

    # clean_up
    info "Astal installation completed successfully."
else
    echo -e "\033[1;31m[ERROR]\033[0m No action specified. Use --help for usage information. \n"
    usage
    exit 1
fi
